//方法1：不适用于负数，但可以改成unsigned int x
#include <stdio.h>
int CountOne(unsigned int x)
{
    int count = 0;
    while (x)
    {
        count += x % 2;
        x = x / 2;
    }
    return sum;
}

int main()
{
    int n = 0;
    scanf_s("%d", &n);
    int count = CountOne(n);
    printf("一共有%d个1", count);
    return 0;
}


//方法2：适用于正数和负数
//需要循环32次，效率较低
#include <stdio.h>
int CountOne(int x)
{
    int count = 0;
    int i  = 0;
    for (i = 0; i < 32; i++)
    {
        if( 1 == (x >> i) & 1)
        count++;
    }
    return count;
}

int main()
{
    int n = 0;
    scanf_s("%d", &n);
    int num = CountOne(n);
    printf("一共有%d个1", num);
    return 0;
}

//方法3：适用于正数和负数
#include <stdio.h>
int CountOne(int x)
{
    int count = 0;
    while (x)
    {
        x = x & (x - 1);
        count++;
    }
    return count;
}

int main()
{
    int n = 0;
    scanf_s("%d", &n);
    int num = CountOne(n);
    printf("一共有%d个1", num);
    return 0;
}
